<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>骆小黑的一亩三分地</title>
  
  <subtitle>阿妮亚</subtitle>
  <link href="https://blog.luoxiaohei.co/atom.xml" rel="self"/>
  
  <link href="https://blog.luoxiaohei.co/"/>
  <updated>2022-05-13T07:24:22.556Z</updated>
  <id>https://blog.luoxiaohei.co/</id>
  
  <author>
    <name>骆小黑</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://blog.luoxiaohei.co/2022/05/15/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/iphone%E5%92%8Cwindows%E5%B1%80%E5%9F%9F%E7%BD%91%E4%BA%92%E4%BC%A0/%E5%86%85%E5%AE%B9%E4%B8%8D%E5%8F%AF%E7%94%A8%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E6%96%87%E4%BB%B6%E5%A4%B9%E5%86%85%E5%AE%B9/"/>
    <id>https://blog.luoxiaohei.co/2022/05/15/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/iphone%E5%92%8Cwindows%E5%B1%80%E5%9F%9F%E7%BD%91%E4%BA%92%E4%BC%A0/%E5%86%85%E5%AE%B9%E4%B8%8D%E5%8F%AF%E7%94%A8%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E6%96%87%E4%BB%B6%E5%A4%B9%E5%86%85%E5%AE%B9/</id>
    <published>2022-05-15T14:06:14.092Z</published>
    <updated>2022-05-13T07:24:22.556Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内容不可用无法显示文件夹内容"><a href="#内容不可用无法显示文件夹内容" class="headerlink" title="内容不可用无法显示文件夹内容"></a>内容不可用无法显示文件夹内容</h1><p>出错原因是啥不知道</p><p>解决办法：删除链接的服务器然后重新连接。</p><p>共享文件夹方法：</p><h6 id="1、在-Windows-电脑新建一个文件夹，右击「属性」，选择「共享」选项卡。"><a href="#1、在-Windows-电脑新建一个文件夹，右击「属性」，选择「共享」选项卡。" class="headerlink" title="1、在 Windows 电脑新建一个文件夹，右击「属性」，选择「共享」选项卡。"></a>1、在 Windows 电脑新建一个文件夹，右击「属性」，选择「共享」选项卡。</h6><p><img src="https://pic4.zhimg.com/80/v2-712d2769bf193c7a3b92f5639ba6d2d7_720w.jpg" alt="img"></p><h6 id="2、点击「高级共享」，在弹出窗口中勾选「共享此文件夹」，点击「权限」"><a href="#2、点击「高级共享」，在弹出窗口中勾选「共享此文件夹」，点击「权限」" class="headerlink" title="2、点击「高级共享」，在弹出窗口中勾选「共享此文件夹」，点击「权限」"></a>2、点击「高级共享」，在弹出窗口中勾选「共享此文件夹」，点击「权限」</h6><p><img src="https://pic1.zhimg.com/80/v2-669f23527c738dd93f23f6bb82967568_720w.jpg" alt="img"></p><p>3、在新打开的「权限」窗口中选中 「Everyone」，在「Everyone」下方勾选「完全控制」选项。</p><p><img src="https://pic4.zhimg.com/80/v2-131545f3e481709230b2b2d74fc8a2a7_720w.jpg" alt="img"></p><p>4、回到最开始的「属性」窗口，点击「共享」，在弹出的「网络访问」窗口，选择「Everyone」后，点击「添加」。</p><p><img src="https://pic4.zhimg.com/80/v2-2e4f68e3b5d0a93cd4923305520b2aef_720w.jpg" alt="img"></p><p>5、添加了 Everyone 用户后，将文件夹的权限改为「读取/写入」，点击右下角的「共享」。</p><p><img src="https://pic1.zhimg.com/80/v2-eadec0f44566d1b5490613e2661df6a8_720w.jpg" alt="img"></p><p>6、查看自己的ipv4地址。用手机文件app连接到该ip，输入用户名和密码，即可共享此文件。<img src="https://pic1.zhimg.com/80/v2-3909bf6dd6e6fece8e77c2ede991eba0_720w.jpg" alt="img"></p><p><img src="https://pic1.zhimg.com/80/v2-707141eb32295cc607880e44095636f4_720w.jpg" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;内容不可用无法显示文件夹内容&quot;&gt;&lt;a href=&quot;#内容不可用无法显示文件夹内容&quot; class=&quot;headerlink&quot; title=&quot;内容不可用无法显示文件夹内容&quot;&gt;&lt;/a&gt;内容不可用无法显示文件夹内容&lt;/h1&gt;&lt;p&gt;出错原因是啥不知道&lt;/p&gt;
&lt;p&gt;解决办法：</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://blog.luoxiaohei.co/2022/05/15/SSH%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0day1/"/>
    <id>https://blog.luoxiaohei.co/2022/05/15/SSH%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0day1/</id>
    <published>2022-05-15T14:06:13.947Z</published>
    <updated>2022-01-14T09:42:36.673Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>解决Permission denied</title>
    <link href="https://blog.luoxiaohei.co/2022/05/02/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/%E8%A7%A3%E5%86%B3git@github.comPermission%20denied(publickey).fatalCould%20not%20read%20form%20remota%20repository/"/>
    <id>https://blog.luoxiaohei.co/2022/05/02/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/%E8%A7%A3%E5%86%B3git@github.comPermission%20denied(publickey).fatalCould%20not%20read%20form%20remota%20repository/</id>
    <published>2022-05-02T06:13:27.000Z</published>
    <updated>2022-05-16T05:14:45.644Z</updated>
    
    <content type="html"><![CDATA[<h1 id="解决-x67-x69-x74-64-103-x69-x74-104-117-98-46-x63-x6f-109-Permission-denied-publickey-fatal-Could-not-read-form-remota-repository"><a href="#解决-x67-x69-x74-64-103-x69-x74-104-117-98-46-x63-x6f-109-Permission-denied-publickey-fatal-Could-not-read-form-remota-repository" class="headerlink" title="解决&#x67;&#x69;&#x74;&#64;&#103;&#x69;&#x74;&#104;&#117;&#98;&#46;&#x63;&#x6f;&#109;:Permission denied(publickey).fatal:Could not read form remota repository."></a>解决<a href="mailto:&#x67;&#x69;&#x74;&#64;&#103;&#x69;&#x74;&#104;&#117;&#98;&#46;&#x63;&#x6f;&#109;">&#x67;&#x69;&#x74;&#64;&#103;&#x69;&#x74;&#104;&#117;&#98;&#46;&#x63;&#x6f;&#109;</a>:Permission denied(publickey).fatal:Could not read form remota repository.</h1><p>今天在github上git别人项目时，下载不下来，提示上面错误。</p><p>原因是客户端与服务器端的publickey不匹配，可能是github看你太久没用了，把你publickey给删掉了。</p><p>看了一下github账号上的publickey，果然还没有绑定这个在本机（客户端）上生成的SSh密钥。</p><p>知道原因之后就很简单了。</p><h5 id="第一步：在本地客户端输入"><a href="#第一步：在本地客户端输入" class="headerlink" title="第一步：在本地客户端输入"></a>第一步：在本地客户端输入</h5><p><code>ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</code></p><p>中间会提示你各种操作，一直回车就好。</p><h5 id="第二步：复制生成的SSHkey"><a href="#第二步：复制生成的SSHkey" class="headerlink" title="第二步：复制生成的SSHkey"></a>第二步：复制生成的SSHkey</h5><h5 id="第三步：绑定你github上的SSHkey"><a href="#第三步：绑定你github上的SSHkey" class="headerlink" title="第三步：绑定你github上的SSHkey"></a>第三步：绑定你github上的SSHkey</h5>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;解决-x67-x69-x74-64-103-x69-x74-104-117-98-46-x63-x6f-109-Permission-denied-publickey-fatal-Could-not-read-form-remota-repository&quot;&gt;&lt;a </summary>
      
    
    
    
    <category term="hexo部署问题" scheme="https://blog.luoxiaohei.co/categories/hexo%E9%83%A8%E7%BD%B2%E9%97%AE%E9%A2%98/"/>
    
    
    <category term="hexo部署问题" scheme="https://blog.luoxiaohei.co/tags/hexo%E9%83%A8%E7%BD%B2%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>并查集</title>
    <link href="https://blog.luoxiaohei.co/2021/05/27/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    <id>https://blog.luoxiaohei.co/2021/05/27/%E5%B9%B6%E6%9F%A5%E9%9B%86/</id>
    <published>2021-05-27T10:17:29.000Z</published>
    <updated>2021-05-28T02:00:57.369Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;并查集</span><br><span class="line">int pre[5005];&#x2F;&#x2F;并查集数组</span><br><span class="line"></span><br><span class="line">bool cmp(const NODE &amp;a,const  NODE &amp;b)&#123;</span><br><span class="line">    return a.dis&lt;b.dis;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int Find(int x)&#123;&#x2F;&#x2F;查找根节点</span><br><span class="line">    nt++;</span><br><span class="line">    int root&#x3D;x;</span><br><span class="line">    while(pre[root]!&#x3D;-1)&#123;</span><br><span class="line">        root&#x3D;pre[root];</span><br><span class="line">    &#125;</span><br><span class="line">    return root;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bool un(int x,int y)&#123;</span><br><span class="line">    nq++;</span><br><span class="line">    int x_root&#x3D;Find(x);</span><br><span class="line">    int y_root&#x3D;Find(y);</span><br><span class="line">    if(x_root&#x3D;&#x3D;y_root)&#123;</span><br><span class="line">        return 0;</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">        pre[x_root]&#x3D;y_root;</span><br><span class="line">        return 1;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;矩阵压缩</span><br><span class="line">int pre[5005];&#x2F;&#x2F;并查集数组</span><br><span class="line"></span><br><span class="line">bool cmp(const NODE &amp;a,const  NODE &amp;b)&#123;</span><br><span class="line">    return a.dis&lt;b.dis;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int Find(int x, int *S)&#123;</span><br><span class="line">    if(S[x] &lt; 0)    &#x2F;&#x2F;说明已经是根节点了</span><br><span class="line">        return x;</span><br><span class="line">    else            &#x2F;&#x2F;不是根节点，递归查找</span><br><span class="line">        return S[x] &#x3D; Find(S[x], S);    &#x2F;&#x2F;查找的同时，将路径上的所有父亲节点赋值为根节点，进行压缩路径</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bool un(int x,int y)&#123;</span><br><span class="line">    int x_root&#x3D;Find(x,pre);</span><br><span class="line">    int y_root&#x3D;Find(y,pre);</span><br><span class="line">    if(x_root&#x3D;&#x3D;y_root)&#123;</span><br><span class="line">        return 0;</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">        pre[x_root]&#x3D;y_root;</span><br><span class="line">        return 1;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;秩压缩</span><br><span class="line">int pre[5005];&#x2F;&#x2F;并查集数组</span><br><span class="line">int find(int x)&#x2F;&#x2F;非递归写法，不太好记但是更快，列几组数据试一下也不难理解</span><br><span class="line">&#123;</span><br><span class="line">int r&#x3D;x,q;</span><br><span class="line">while(r!&#x3D;father[r])</span><br><span class="line">r&#x3D;father[r];</span><br><span class="line">while(x!&#x3D;r)</span><br><span class="line">&#123;</span><br><span class="line">q&#x3D;father[x];</span><br><span class="line">father[x]&#x3D;r;</span><br><span class="line">x&#x3D;q;</span><br><span class="line">&#125;</span><br><span class="line">return r;</span><br><span class="line">&#125;</span><br><span class="line">void Merge(int x,int y)</span><br><span class="line">&#123;</span><br><span class="line">    int t1&#x3D;getf(x),t2&#x3D;getf(y);</span><br><span class="line">    if(t1&#x3D;&#x3D;t2) return ;&#x2F;&#x2F;已合并返回</span><br><span class="line">    if(rnk[t1]&gt;rnk[t2]) f[t2]&#x3D;t1;  &#x2F;&#x2F;把y的祖先t2和并到x的祖先t1上。因以t1为根的树更高</span><br><span class="line">    else &#123;</span><br><span class="line">        f[t1]&#x3D;t2;</span><br><span class="line">        if(rnk[t1]&#x3D;&#x3D;rnk[t2]) rnk[t2]++; &#x2F;&#x2F;若两树一样高，那么合并后，高度加一。</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">bool un(int x,int y)&#123;</span><br><span class="line">    int x_root&#x3D;Find(x,pre);</span><br><span class="line">    int y_root&#x3D;Find(y,pre);</span><br><span class="line">    if(x_root&#x3D;&#x3D;y_root)&#123;</span><br><span class="line">        return 0;</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">        pre[x_root]&#x3D;y_root;</span><br><span class="line">        return 1;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x2F;&amp;#x2F;并查集&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int pre[500</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>生成图和kruskal</title>
    <link href="https://blog.luoxiaohei.co/2021/05/27/%E7%94%9F%E6%88%90%E5%9B%BE%E5%92%8Ckruskal/"/>
    <id>https://blog.luoxiaohei.co/2021/05/27/%E7%94%9F%E6%88%90%E5%9B%BE%E5%92%8Ckruskal/</id>
    <published>2021-05-27T09:58:59.000Z</published>
    <updated>2021-05-28T02:01:29.461Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">long</span> <span class="keyword">long</span> maxvertexnum= <span class="number">20000</span>; <span class="comment">/*最大顶点数设为1000000*/</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">long</span> <span class="keyword">long</span> maxedgenum = <span class="number">6000000</span>; <span class="comment">/*最大边数，由此控制密度*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> infinity 2147483647 <span class="comment">/*当两点不连通时，则它们之间距离为最大值*/</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> vertextype;<span class="comment">/*顶点的类型为整型*/</span></span><br><span class="line"><span class="keyword">double</span> nq=<span class="number">0</span>,nt=<span class="number">0</span>;<span class="comment">/*并查集的处理次数*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> from,to,dis;<span class="comment">//结构体储存边</span></span><br><span class="line">&#125;NODE;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">MGraph</span>//邻接矩阵表示法的结构和类型声明</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    vertextype V[maxvertexnum];<span class="comment">//顶点集</span></span><br><span class="line">    <span class="built_in">vector</span>&lt;NODE &gt; edge;<span class="comment">//边集</span></span><br><span class="line">    <span class="keyword">int</span> n,e;<span class="comment">//顶点数，边数</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">randomnum</span><span class="params">()</span><span class="comment">//返回一个0-之间的随机数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">    <span class="comment">//srand(time(NULL));//设置随机数种子，使每次运行获取的随机数不同</span></span><br><span class="line">    a=rand()%maxvertexnum;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*int* countedge(MGraph *G)//函数返回一个数组</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">    int i;</span></span><br><span class="line"><span class="comment">    int *sum=new int[maxedgenum];</span></span><br><span class="line"><span class="comment">    for (int j = 0; j &lt; maxvertexnum; ++j) &#123;</span></span><br><span class="line"><span class="comment">        sum[j]=0;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    for (i = 0; i &lt; maxedgenum; i++) &#123;</span></span><br><span class="line"><span class="comment">        if(G-&gt;edge[i].dis!=infinity)&#123;</span></span><br><span class="line"><span class="comment">            sum[G-&gt;edge[i].from]+=1;</span></span><br><span class="line"><span class="comment">            sum[G-&gt;edge[i].to]+=1;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    return sum;</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//并查集</span></span><br><span class="line"><span class="keyword">int</span> pre[<span class="number">5005000</span>];<span class="comment">//并查集数组</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> NODE &amp;a,<span class="keyword">const</span>  NODE &amp;b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.dis&lt;b.dis;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="comment">//查找根节点</span></span><br><span class="line">    nt++;</span><br><span class="line">    <span class="keyword">int</span> root=x;</span><br><span class="line">    <span class="keyword">while</span>(pre[root]!=<span class="number">-1</span>)&#123;</span><br><span class="line">        root=pre[root];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">un</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x_root=Find(x);</span><br><span class="line">    <span class="keyword">int</span> y_root=Find(y);</span><br><span class="line">    <span class="keyword">if</span>(x_root==y_root)&#123;</span><br><span class="line">    nq++;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        pre[x_root]=y_root;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateMGraphDG</span><span class="params">(MGraph *G)</span><span class="comment">//生成有向图</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> i,j,k;</span><br><span class="line">    G-&gt;n=maxvertexnum;</span><br><span class="line">    G-&gt;e=maxedgenum;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;G-&gt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        G-&gt;V[i]=i;<span class="comment">//为每个顶点都编号从0-99</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10000000</span>;i++) &#123;  <span class="comment">//G-&gt;e=10000000</span></span><br><span class="line">        G-&gt;edge.push_back(&#123;<span class="number">-1</span>,<span class="number">-1</span>,infinity&#125;);<span class="comment">//初始化邻接矩阵</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(k=<span class="number">0</span>;k&lt;maxedgenum;k++)&#123;</span><br><span class="line">        i=randomnum();<span class="comment">//随机生成任意两顶点</span></span><br><span class="line">        j=randomnum();</span><br><span class="line">        G-&gt;edge.push_back(&#123;i,j,rand()%<span class="number">10000</span>&#125;);</span><br><span class="line">    <span class="comment">/*  G-&gt;edge[k].from=i;//初始化邻接矩阵</span></span><br><span class="line"><span class="comment">        G-&gt;edge[k].to=j;//初始化邻接矩阵</span></span><br><span class="line"><span class="comment">        G-&gt;edge[k].dis=rand()%10000;//建立邻接矩阵，边的权重随机*/</span></span><br><span class="line">        <span class="comment">/*cout&lt;&lt;i&lt;&lt;&quot;-&gt;&quot;&lt;&lt;j&lt;&lt;&quot;-&quot;&lt;&lt;G-&gt;edge[k].dis&lt;&lt;&quot;   &quot;;*/</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">clock_t</span> start=clock();</span><br><span class="line">    MGraph *DGG=<span class="keyword">new</span> MGraph;<span class="comment">//有向图</span></span><br><span class="line">    <span class="comment">//int *dg;</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;在有向图中&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    CreateMGraphDG(DGG);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="comment">/*dg=countedge(DGG);//每个节点的度*/</span></span><br><span class="line">    <span class="comment">/*for(int i=0;i&lt;maxvertexnum;i++)</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">        cout&lt;&lt;&quot;顶点 【&quot;&lt;&lt;DGG-&gt;V[i]&lt;&lt;&quot;】的度为&quot;&lt;&lt;dg[i]&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>,tot=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memset</span>(pre,<span class="number">-1</span>,<span class="keyword">sizeof</span>(pre));<span class="comment">//数组清零</span></span><br><span class="line">    sort(DGG-&gt;edge.begin(),DGG-&gt;edge.end(),cmp);<span class="comment">//以z的大小为标准进行升序排序</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;maxedgenum;i++)&#123;<span class="comment">//依次取出权值最小的边</span></span><br><span class="line">        <span class="keyword">if</span>(un(DGG-&gt;edge[i].from,DGG-&gt;edge[i].to))&#123;<span class="comment">//如果该边的两个结点不在一个集合中，即添加该边未产生回路</span></span><br><span class="line">            ans+=DGG-&gt;edge[i].dis;<span class="comment">//加入边权值</span></span><br><span class="line">            tot++;<span class="comment">//边数加一</span></span><br><span class="line">            <span class="keyword">if</span>(tot==maxvertexnum<span class="number">-1</span>)&#123;<span class="comment">//当边数为n-1时，输出权值和</span></span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;最小生成树的路径为：&quot;</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;kruskal处理的边数为：&quot;</span>&lt;&lt;i&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;并查集处理的节点的次数为：&quot;</span>&lt;&lt;nq&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;并查集处理的总节点次数为：&quot;</span>&lt;&lt;nt&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="built_in">cout</span>.setf(ios::fixed);</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;三种并查集的平均次数：&quot;</span>&lt;&lt;setiosflags(ios::fixed)&lt;&lt;setprecision(<span class="number">4</span>)&lt;&lt;nq/nt&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">clock_t</span> end=clock();</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;运行时间：&quot;</span>&lt;&lt;end-start&lt;&lt;<span class="string">&quot;ms&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/sp</summary>
      
    
    
    
    
    <category term="算法" scheme="https://blog.luoxiaohei.co/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>生成树</title>
    <link href="https://blog.luoxiaohei.co/2021/05/27/%E7%94%9F%E6%88%90%E6%A0%91/"/>
    <id>https://blog.luoxiaohei.co/2021/05/27/%E7%94%9F%E6%88%90%E6%A0%91/</id>
    <published>2021-05-27T09:46:26.000Z</published>
    <updated>2021-05-28T02:02:28.129Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include &lt;bits&#x2F;stdc++.h&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int fa[100005],f[100005];</span><br><span class="line">int find(int x)&#123;return fa[x]&#x3D;&#x3D;x?x:fa[x]&#x3D;find(fa[x]);&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    srand(time(0));</span><br><span class="line">    int n&#x3D;100;&#x2F;&#x2F;节点个数，自行更改</span><br><span class="line">    for(int i&#x3D;1;i&lt;&#x3D;n;i++)fa[i]&#x3D;i;   &#x2F;&#x2F;n个节点</span><br><span class="line">    int root&#x3D;rand()%n+1;</span><br><span class="line">    cout&lt;&lt;n&lt;&lt;endl;</span><br><span class="line">    for(int i&#x3D;1;i&lt;&#x3D;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        if(i&#x3D;&#x3D;root) continue;</span><br><span class="line">        int father;</span><br><span class="line">        do&#123;</span><br><span class="line">            father&#x3D;rand()%n+1;</span><br><span class="line">        &#125;while(find(i)&#x3D;&#x3D;find(father));</span><br><span class="line">        f[i]&#x3D;father;</span><br><span class="line">        fa[find(i)]&#x3D;find(father);</span><br><span class="line">    &#125;</span><br><span class="line">    for(int i&#x3D;1;i&lt;&#x3D;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        if(root&#x3D;&#x3D;i) continue;</span><br><span class="line">        cout&lt;&lt;i&lt;&lt;&#39; &#39;&lt;&lt;f[i]&lt;&lt;&#39; &#39;&lt;&lt;rand()%100+1&lt;&lt;endl;&#x2F;&#x2F;相连的两个节点及边权</span><br><span class="line">    &#125;&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#include &amp;lt;bits&amp;#x2F;stdc++.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span clas</summary>
      
    
    
    
    
    <category term="算法" scheme="https://blog.luoxiaohei.co/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>tomcat ，servlet遇到的坑</title>
    <link href="https://blog.luoxiaohei.co/2020/10/26/tomcat%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/"/>
    <id>https://blog.luoxiaohei.co/2020/10/26/tomcat%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/</id>
    <published>2020-10-26T13:05:48.000Z</published>
    <updated>2021-05-28T01:59:54.343Z</updated>
    
    <content type="html"><![CDATA[<p>Servlet配置要采用嵌入式的不然artifact会发生某名错误</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Servlet配置要采用嵌入式的不然artifact会发生某名错误&lt;/p&gt;
</summary>
      
    
    
    
    <category term="tomcat" scheme="https://blog.luoxiaohei.co/categories/tomcat/"/>
    
    
    <category term="tomcat" scheme="https://blog.luoxiaohei.co/tags/tomcat/"/>
    
  </entry>
  
  <entry>
    <title>web-Servlet</title>
    <link href="https://blog.luoxiaohei.co/2020/10/22/web-Servlet/"/>
    <id>https://blog.luoxiaohei.co/2020/10/22/web-Servlet/</id>
    <published>2020-10-22T12:11:18.000Z</published>
    <updated>2021-05-28T02:00:27.007Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>📖这是大三上学期学的javaweb知识记录总汇</p></div><hr><h1 id="Servlet介绍"><a href="#Servlet介绍" class="headerlink" title="Servlet介绍"></a>Servlet介绍</h1><p>Servlet是运行在服务器端的java应用程序。可以生成动态的web页面。实际上jsp的底层就是servlet。</p><h2 id="新建Servlet"><a href="#新建Servlet" class="headerlink" title="新建Servlet"></a>新建Servlet</h2><p><img src="http://lc-ysstfnx3.cn-n1.lcfile.com/70fd674289e3cde57f9c.png/%7D_25K%292FA%28ZWAK%5B%25Q8%6026%29A.png"></p><h2 id="重写doGet（）"><a href="#重写doGet（）" class="headerlink" title="重写doGet（）"></a>重写doGet（）</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package servlets;</span><br><span class="line"></span><br><span class="line">import javax.servlet.ServletException;</span><br><span class="line">import javax.servlet.annotation.WebServlet;</span><br><span class="line">import javax.servlet.http.HttpServlet;</span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import javax.servlet.http.HttpServletResponse;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line">@WebServlet(name &#x3D; &quot;WelcomeServlet&quot;)</span><br><span class="line">public class WelcomeServlet extends HttpServlet &#123;</span><br><span class="line">    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">        response.setContentType(&quot;text&#x2F;html;charset &#x3D; gb2312&quot;);</span><br><span class="line">        PrintWriter out &#x3D; response.getWriter();</span><br><span class="line">        out.println(&quot;欢迎&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="配置Servlet"><a href="#配置Servlet" class="headerlink" title="配置Servlet"></a>配置Servlet</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;servlet&gt;</span><br><span class="line"> &lt;servlet-name&gt;WelcomeServlet&lt;&#x2F;servlet-name&gt;</span><br><span class="line"> &lt;servlet-class&gt;servlets.WelcomeServlet&lt;&#x2F;servlet-class&gt;</span><br><span class="line">&lt;&#x2F;servlet&gt;</span><br><span class="line"> &lt;servlet-mapping&gt;</span><br><span class="line">  &lt;servlet-name&gt;WelcomeServlet&lt;&#x2F;servlet-name&gt;</span><br><span class="line">  &lt;url-pattern&gt;&#x2F;servlets&#x2F;WelcomeServlet</span><br><span class="line"> &lt;&#x2F;url-pattern&gt;</span><br></pre></td></tr></table></figure><h2 id="部署Servlet"><a href="#部署Servlet" class="headerlink" title="部署Servlet"></a>部署Servlet</h2><p>复制war包到tomcat启动。</p><p>访问<a href="http://localhost:8088/mysql_war/servlets/WelcomeServlet">http://localhost:8088/mysql_war/servlets/WelcomeServlet</a></p><p>结果：欢迎。</p><h2 id="Servlet-与-JSP内置对象"><a href="#Servlet-与-JSP内置对象" class="headerlink" title="Servlet 与 JSP内置对象"></a>Servlet 与 JSP内置对象</h2><p>1.获取out对象</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PrintWriter out &#x3D; response.getWriter();</span><br></pre></td></tr></table></figure><p>2.request和response</p><p>函数体中的参数当作对象用</p><p>3.session对象</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">HttpSession session &#x3D; request.getSession();</span><br></pre></td></tr></table></figure><p>4.application对象</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ServletContext application &#x3D; this.get ServletContext();</span><br></pre></td></tr></table></figure><p>使用application实现Servlet内服务器内的跳转</p><p>1.重定向</p><p>response.sendRedirect(“URL 地址”)</p><p>2.服务器内跳转</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ServletContext application &#x3D; this.get ServletContext();</span><br><span class="line">RequestDispatcher rd &#x3D; application.getRequestDispatcher(&quot;URL地址&quot;)；</span><br><span class="line">rd.forward(request,response);</span><br></pre></td></tr></table></figure><h2 id="获取参数"><a href="#获取参数" class="headerlink" title="获取参数"></a>获取参数</h2><p>全局</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ServletContext application &#x3D; this.getServletContext();</span><br><span class="line">String encoding &#x3D; application.getInitParameter(&quot;encoding&quot;);</span><br></pre></td></tr></table></figure><p>局部</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">String driverClassName &#x3D; this.getInitParameter(&quot;driverClassName&quot;);</span><br></pre></td></tr></table></figure><h2 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h2><p>以前都是在Servlet中设置编码，在前面已经讲过不利因素，下面用添加过滤器的方法解决乱码问题。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package filter;</span><br><span class="line"></span><br><span class="line">import java.io.IOException;</span><br><span class="line">import javax.servlet.Filter;</span><br><span class="line">import javax.servlet.FilterChain;</span><br><span class="line">import javax.servlet.FilterConfig;</span><br><span class="line">import javax.servlet.ServletException;</span><br><span class="line">import javax.servlet.ServletRequest;</span><br><span class="line">import javax.servlet.ServletResponse;</span><br><span class="line"></span><br><span class="line">public class EncodingFilter implements Filter &#123;</span><br><span class="line">   public void init(FilterConfig config) throws ServletException &#123;&#125;</span><br><span class="line">   public void destroy() &#123;&#125;</span><br><span class="line">   public void doFilter(ServletRequest request, ServletResponse response,</span><br><span class="line">         FilterChain chain) throws IOException, ServletException &#123;</span><br><span class="line">      request.setCharacterEncoding(&quot;gb2312&quot;);</span><br><span class="line">      chain.doFilter(request, response);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> &lt;filter&gt;</span><br><span class="line"> &lt;filter-name&gt;EncodingFilter&lt;&#x2F;filter-name&gt;</span><br><span class="line"> &lt;filter-class&gt;filter.EncodingFilter&lt;&#x2F;filter-class&gt;</span><br><span class="line">&lt;&#x2F;filter&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;filter-mapping&gt;</span><br><span class="line"> &lt;filter-name&gt;EncodingFilter&lt;&#x2F;filter-name&gt;</span><br><span class="line"> &lt;url-pattern&gt;&#x2F;*&lt;&#x2F;url-pattern&gt;</span><br></pre></td></tr></table></figure><h2 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h2><p>创建error.jsp</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%@ page language&#x3D;&quot;java&quot; pageEncoding&#x3D;&quot;gb2312&quot; isErrorPage&#x3D;&quot;true&quot;%&gt;</span><br><span class="line">&lt;html&gt;  </span><br><span class="line">&lt;body&gt;</span><br><span class="line">          对不起，您操作错误         </span><br><span class="line"> &lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>配置：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> &lt;error-page&gt;</span><br><span class="line">   &lt;exception-type&gt;java.lang.Exception&lt;&#x2F;exception-type&gt;</span><br><span class="line">   &lt;location&gt;&#x2F;error.jsp&lt;&#x2F;location&gt;</span><br><span class="line">&lt;&#x2F;error-page&gt;</span><br></pre></td></tr></table></figure><p>这样exception都被error.jsp统一处理了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;note info&quot;&gt;&lt;p&gt;📖这是大三上学期学的javaweb知识记录总汇&lt;/p&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;h1 id=&quot;Servlet介绍&quot;&gt;&lt;a href=&quot;#Servlet介绍&quot; class=&quot;headerlink&quot; title=&quot;Servle</summary>
      
    
    
    
    <category term="javaWeb" scheme="https://blog.luoxiaohei.co/categories/javaWeb/"/>
    
    
    <category term="javaWeb" scheme="https://blog.luoxiaohei.co/tags/javaWeb/"/>
    
  </entry>
  
  <entry>
    <title>web-内置对象</title>
    <link href="https://blog.luoxiaohei.co/2020/10/22/web-%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1/"/>
    <id>https://blog.luoxiaohei.co/2020/10/22/web-%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1/</id>
    <published>2020-10-22T11:56:29.000Z</published>
    <updated>2021-05-28T02:00:39.251Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>📖这是大三上学期学的javaweb知识记录总汇</p></div><hr><p>九个常用内置对象，看看书就能理解。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;note info&quot;&gt;&lt;p&gt;📖这是大三上学期学的javaweb知识记录总汇&lt;/p&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;p&gt;九个常用内置对象，看看书就能理解。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="javaWeb" scheme="https://blog.luoxiaohei.co/categories/javaWeb/"/>
    
    
    <category term="javaWeb" scheme="https://blog.luoxiaohei.co/tags/javaWeb/"/>
    
  </entry>
  
  <entry>
    <title>web-form</title>
    <link href="https://blog.luoxiaohei.co/2020/10/22/web-form/"/>
    <id>https://blog.luoxiaohei.co/2020/10/22/web-form/</id>
    <published>2020-10-22T10:30:19.000Z</published>
    <updated>2021-05-28T01:59:54.442Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>📖这是大三上学期学的javaweb知识记录总汇</p></div><hr><h1 id="表单的性质"><a href="#表单的性质" class="headerlink" title="表单的性质"></a>表单的性质</h1><ul><li>在表单中可以输入一些内容，这些输入功能由控件提供，叫作表单元素。</li><li>在表单中一般会有一个按钮负责提交。</li><li>单击提交按钮，表单元素中的内容会提交给服务器。</li><li>表单元素放在<form> </form>之间。</li></ul><h1 id="表单元素的获取"><a href="#表单元素的获取" class="headerlink" title="表单元素的获取"></a>表单元素的获取</h1><p>表单元素有：文本框，密码框，多行文本框，单选按钮，下拉菜单等。</p><h3 id="文本框："><a href="#文本框：" class="headerlink" title="文本框："></a>文本框：</h3><p>表单：</p><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;form action=<span class="string">&quot;textForm_result.jsp&quot;</span> method=<span class="string">&quot;post&quot;</span> &gt;</span><br><span class="line">请您输入学生的资料：&lt;BR&gt;</span><br><span class="line">&lt;input name=<span class="string">&quot;stuname&quot;</span> type=<span class="string">&quot;text&quot;</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><p>获取：</p><figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">   <span class="comment">//request.setCharacterEncoding(&quot;gb2312&quot;);</span></span><br><span class="line"></span><br><span class="line">   String stuname = request.getParameter(<span class="string">&quot;stuname&quot;</span>);</span><br><span class="line">   out.println(<span class="string">&quot;输入的查询关键字为:&quot;</span> + stuname);</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><h3 id="密码框"><a href="#密码框" class="headerlink" title="密码框"></a>密码框</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;form action=<span class="string">&quot;textForm_result.jsp&quot;</span> method=<span class="string">&quot;post&quot;</span> &gt;</span><br><span class="line">   请您输入学生的资料：&lt;BR&gt;</span><br><span class="line">   &lt;input name=<span class="string">&quot;stuname&quot;</span> type=<span class="string">&quot;text&quot;</span>&gt;</span><br><span class="line">   &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">String password = request.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">out.println(<span class="string">&quot;密码为:&quot;</span> + password);</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><h3 id="多行文本框"><a href="#多行文本框" class="headerlink" title="多行文本框"></a>多行文本框</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;form action=<span class="string">&quot;textareaForm_result.jsp&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">   请您输入账号：&lt;input name=<span class="string">&quot;account&quot;</span> type=<span class="string">&quot;text&quot;</span>&gt;&lt;BR&gt;</span><br><span class="line">   请您输入密码：&lt;input name=<span class="string">&quot;password&quot;</span> type=<span class="string">&quot;password&quot;</span>&gt;&lt;BR&gt;</span><br><span class="line">   请您输入个人信息：&lt;BR&gt;</span><br><span class="line">   &lt;textarea name=&quot;info&quot; rows=&quot;5&quot; cols=&quot;30&quot;&gt;&lt;/textarea&gt;</span><br><span class="line">   &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;注册&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">   String info = request.getParameter(<span class="string">&quot;info&quot;</span>);</span><br><span class="line">   out.println(<span class="string">&quot;个人信息为:&quot;</span> + info);</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><h3 id="单击按钮"><a href="#单击按钮" class="headerlink" title="单击按钮"></a>单击按钮</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;form action=<span class="string">&quot;radioForm_result.jsp&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">   请您输入账号：&lt;input name=<span class="string">&quot;account&quot;</span> type=<span class="string">&quot;text&quot;</span>&gt;&lt;BR&gt;</span><br><span class="line">   请您输入密码：&lt;input name=<span class="string">&quot;password&quot;</span> type=<span class="string">&quot;password&quot;</span>&gt;&lt;BR&gt;</span><br><span class="line">   请您选择性别：</span><br><span class="line">   &lt;input name=<span class="string">&quot;sex&quot;</span> type=<span class="string">&quot;radio&quot;</span> value=<span class="string">&quot;boy&quot;</span> checked&gt;男</span><br><span class="line">   &lt;input name=<span class="string">&quot;sex&quot;</span> type=<span class="string">&quot;radio&quot;</span> value=<span class="string">&quot;girl&quot;</span>&gt;女&lt;BR&gt;</span><br><span class="line">   &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;注册&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">   String sex = request.getParameter(<span class="string">&quot;sex&quot;</span>);</span><br><span class="line">   out.println(<span class="string">&quot;性别为:&quot;</span> + sex);</span><br><span class="line"></span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><h3 id="下拉菜单"><a href="#下拉菜单" class="headerlink" title="下拉菜单"></a>下拉菜单</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;form action=<span class="string">&quot;selectForm_result.jsp&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">   请您输入账号：&lt;input name=<span class="string">&quot;account&quot;</span> type=<span class="string">&quot;text&quot;</span>&gt;&lt;BR&gt;</span><br><span class="line">   请您输入密码：&lt;input name=<span class="string">&quot;password&quot;</span> type=<span class="string">&quot;password&quot;</span>&gt;&lt;BR&gt;</span><br><span class="line">   请您选择家乡：</span><br><span class="line">   &lt;select name=<span class="string">&quot;home&quot;</span>&gt;</span><br><span class="line">      &lt;option value=&quot;beijing&quot;&gt;北京&lt;/option&gt;</span><br><span class="line">      &lt;option value=&quot;shanghai&quot;&gt;上海&lt;/option&gt;</span><br><span class="line">      &lt;option value=&quot;guangdong&quot;&gt;广东&lt;/option&gt;</span><br><span class="line">   &lt;/select&gt;  </span><br><span class="line">   &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;注册&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">   String home = request.getParameter(<span class="string">&quot;home&quot;</span>);</span><br><span class="line">   out.println(<span class="string">&quot;家乡为:&quot;</span> + home);</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><p>还有很多表单元素，不一一举例。</p><h1 id="中文乱码"><a href="#中文乱码" class="headerlink" title="中文乱码"></a>中文乱码</h1><h3 id="中文无法显示"><a href="#中文无法显示" class="headerlink" title="中文无法显示"></a>中文无法显示</h3><p>在文件头上加</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%@ page language&#x3D;&quot;java&quot; contentType&#x3D;&quot;text&#x2F;html; charset&#x3D;gb2312&quot;%&gt;</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%@ page language&#x3D;&quot;java&quot;  pageEncoding&#x3D;gb2312&quot;%&gt;</span><br></pre></td></tr></table></figure><h3 id="提交过程显示乱码"><a href="#提交过程显示乱码" class="headerlink" title="提交过程显示乱码"></a>提交过程显示乱码</h3><p>直接修改request的编码。</p><figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">request.setCharacterEncoding(<span class="string">&quot;gb2312&quot;</span>);</span><br><span class="line">String flower = request.getParameter(<span class="string">&quot;flower&quot;</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;note info&quot;&gt;&lt;p&gt;📖这是大三上学期学的javaweb知识记录总汇&lt;/p&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;h1 id=&quot;表单的性质&quot;&gt;&lt;a href=&quot;#表单的性质&quot; class=&quot;headerlink&quot; title=&quot;表单的性质&quot;&gt;&lt;/a&gt;表单的</summary>
      
    
    
    
    <category term="javaWeb" scheme="https://blog.luoxiaohei.co/categories/javaWeb/"/>
    
    
    <category term="javaWeb" scheme="https://blog.luoxiaohei.co/tags/javaWeb/"/>
    
  </entry>
  
  <entry>
    <title>web-JSP</title>
    <link href="https://blog.luoxiaohei.co/2020/10/22/web-JSP/"/>
    <id>https://blog.luoxiaohei.co/2020/10/22/web-JSP/</id>
    <published>2020-10-22T10:29:32.000Z</published>
    <updated>2021-05-28T01:57:44.362Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>📖这是大三上学期学的javaweb知识记录总汇</p></div><hr><h1 id="介绍："><a href="#介绍：" class="headerlink" title="介绍："></a>介绍：</h1><p>JSP就是嵌入了java代码的网页。</p><p>JSP属于动态网页</p><p>创建JSP：</p><p>在IDEA左上角点击File-New-Project,选择java-javaweb.确定。</p><p>在创建好的项目下的 WEB-INF目录下右击点击New-JSP.</p><p>如图:</p><p><img src="http://lc-ysstfnx3.cn-n1.lcfile.com/a23027934dab66f577d0.png/6%7BS%7EVHJ%7B2SHD9B%60F%7B6%60YVOL.png"></p><p>其中，</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType&#x3D;&quot;text&#x2F;html;charset&#x3D;UTF-8&quot; language&#x3D;&quot;java&quot; %&gt;</span><br></pre></td></tr></table></figure><p>是文件的page指令，作用是：定义输出格式是HTML。编码UTF-8.语言是java语言。</p><h2 id="导入包"><a href="#导入包" class="headerlink" title="导入包"></a>导入包</h2><p>编程时用到JDK类，或者自行定义的类这个时候需要用import导入。</p><p>&lt;%@ page import = “包名.类名”%&gt;</p><p>例如导入java.util.Date包实现时间的显示：</p><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> <span class="keyword">import</span>=<span class="string">&quot;java.util.Date&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">你的时间是&lt;%= <span class="keyword">new</span> Date() %&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>效果：</p><p>你的时间是Thu Oct 22 18:57:16 CST 2020</p><h2 id="设置字符集"><a href="#设置字符集" class="headerlink" title="设置字符集"></a>设置字符集</h2><p>pageEncoding属性可以设置页面的字符集，常见的有ISO-8859-1,gb2312和GBK。</p><h2 id="设置错误页面"><a href="#设置错误页面" class="headerlink" title="设置错误页面"></a>设置错误页面</h2><p>发生异常的页面用：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%@ page errorPage &#x3D; &quot;***.jsp&quot;</span><br></pre></td></tr></table></figure><p>跳转到的***.jsp页面用：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%@ page isErrorPage &#x3D; &quot;true&quot; %&gt; </span><br></pre></td></tr></table></figure><h2 id="JSP动作"><a href="#JSP动作" class="headerlink" title="JSP动作"></a>JSP动作</h2><p>jsp:forward : 执行页面转向，将请求的处理转发到下一个页面。</p><p>jsp:include : 用于动态引入一个JSP页面。</p><p>jsp:useBeam : 创建一个JavaBean的实例（初始化）。</p><p>jsp:setProperty : 设置JavaBean实例的属性值。</p><p>jsp:getProperty : 输出JavaBean实例的属性值。</p><p>jsp:plugin : 用于下载JavaBean或Applet到客户端。</p><h1 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h1><p>&lt;% – 注释内容 – %&gt;</p><p>//</p><p>/*   */</p><h1 id="JSP表达式"><a href="#JSP表达式" class="headerlink" title="JSP表达式"></a>JSP表达式</h1><p>&lt;% =变量/返回值/表达式 %&gt;</p><p>例如&lt;%=msg%&gt;,表示把msg内容输出给客户端。等价于&lt;%out.print(msg);%&gt;</p>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;note info&quot;&gt;&lt;p&gt;📖这是大三上学期学的javaweb知识记录总汇&lt;/p&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;h1 id=&quot;介绍：&quot;&gt;&lt;a href=&quot;#介绍：&quot; class=&quot;headerlink&quot; title=&quot;介绍：&quot;&gt;&lt;/a&gt;介绍：&lt;/h1&gt;&lt;</summary>
      
    
    
    
    <category term="javaWeb" scheme="https://blog.luoxiaohei.co/categories/javaWeb/"/>
    
    
    <category term="javaWeb" scheme="https://blog.luoxiaohei.co/tags/javaWeb/"/>
    
  </entry>
  
  <entry>
    <title>web-mysql</title>
    <link href="https://blog.luoxiaohei.co/2020/10/22/web-mysql/"/>
    <id>https://blog.luoxiaohei.co/2020/10/22/web-mysql/</id>
    <published>2020-10-22T10:21:23.000Z</published>
    <updated>2021-05-28T02:00:12.759Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>📖这是大三上学期学的javaweb知识记录总汇</p></div><hr><h1 id="用JSP访问数据库"><a href="#用JSP访问数据库" class="headerlink" title="用JSP访问数据库"></a>用JSP访问数据库</h1><p>Java技术访问数据库叫作jdbc。与jdbc有关的接口存放在java.sql包中。主要包括：</p><p>Connection：负责连接数据库</p><p>Statement：负责执行数据库语句</p><p>ResultSet：负责存放查询结果</p><h2 id="数据库厂商驱动连接："><a href="#数据库厂商驱动连接：" class="headerlink" title="数据库厂商驱动连接："></a>数据库厂商驱动连接：</h2><p>第一步：安装数据库，选择的是mysql。</p><p>第二步：为了简化mysql的使用，选择破解版的navicteformysql</p><p>第三步：新建本地数据库，新建表。</p><p>第四步：将数据库厂商下载的jdbc驱动包，复制到WEB-INF/lib下。</p><p>第五步：连接数据库</p><figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//star</span></span><br><span class="line">Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">String url = <span class="string">&quot;jdbc:mysql://localhost:3306/school&quot;</span>;</span><br><span class="line"><span class="comment">//    8.0以前版本加载驱动方式</span></span><br><span class="line"><span class="comment">//end</span></span><br><span class="line">Connection con = DriverManager.getConnection(url, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">Statement stat = con.createStatement();</span><br></pre></td></tr></table></figure><p>使用Statement接口运行SQL语句：</p><figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">Statement stat = con.createStatement();<span class="comment">//创建statement实例</span></span><br><span class="line">String sql = <span class="string">&quot;select * from school&quot;</span>;</span><br><span class="line">ResultSet rs = stat.executeQuery(sql);<span class="comment">//执行sql操作，返回SQL更改的内容或修改的次数</span></span><br></pre></td></tr></table></figure><p>接下来可以进行SQL的增删改查操作。这里不一一介绍。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;note info&quot;&gt;&lt;p&gt;📖这是大三上学期学的javaweb知识记录总汇&lt;/p&gt;
&lt;/div&gt;


&lt;hr&gt;
&lt;h1 id=&quot;用JSP访问数据库&quot;&gt;&lt;a href=&quot;#用JSP访问数据库&quot; class=&quot;headerlink&quot; title=&quot;用JSP访</summary>
      
    
    
    
    <category term="javaWeb" scheme="https://blog.luoxiaohei.co/categories/javaWeb/"/>
    
    
    <category term="javaWeb" scheme="https://blog.luoxiaohei.co/tags/javaWeb/"/>
    
  </entry>
  
  <entry>
    <title>javaWeb环境搭配</title>
    <link href="https://blog.luoxiaohei.co/2020/10/15/javaWeb%E7%8E%AF%E5%A2%83%E6%90%AD%E9%85%8D/"/>
    <id>https://blog.luoxiaohei.co/2020/10/15/javaWeb%E7%8E%AF%E5%A2%83%E6%90%AD%E9%85%8D/</id>
    <published>2020-10-15T07:44:46.000Z</published>
    <updated>2021-05-28T01:59:54.430Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实验一-JSP开发环境的配置运行"><a href="#实验一-JSP开发环境的配置运行" class="headerlink" title="实验一 JSP开发环境的配置运行"></a>实验一 JSP开发环境的配置运行</h2><p>一、实验目的</p><p>1．掌握设置JDK环境。</p><p>2．掌握设置Tomcat环境。</p><p>3．安装、掌握Eclipse、MyEclipse、IntelliJ IDEA软件，为学习 JSP和进行<br>JSP的实验做好准备工作。</p><p>4．浏览JSP 程序并运行JSP页面。</p><p>二、实验项目内容</p><p>（一）JDK安装与配置</p><p>略</p><p>（二）Tomcat安装与配置</p><p>略</p><p>（三）IDE（Eclipse、MyEclipse或IntelliJ IDEA）的安装与配置</p><p>略</p><p>（四）在IDE上建立一个项目（javaweb）在项目中一个JSP （first.jsp）</p><p>以intelliJ IDEA为例</p><p><img src="https://temp-1gy46md6aa57683d-1303006761.tcloudbaseapp.com/195443c4d887f92c8c3e4736d11715b7.png"></p><p><img src="https://temp-1gy46md6aa57683d-1303006761.tcloudbaseapp.com/902076ec3de1fd330eacb5e31db1e9ab.png"></p><p><img src="https://temp-1gy46md6aa57683d-1303006761.tcloudbaseapp.com/dd610eb95051fbcb72372201de767ecb.png"></p><p><img src="https://temp-1gy46md6aa57683d-1303006761.tcloudbaseapp.com/78fef6257f1f8b76b9af53fe7ea0d7bb.png"></p><p>（五）部署JSP工程文件</p><p><img src="https://temp-1gy46md6aa57683d-1303006761.tcloudbaseapp.com/322d4836e417e0ea859a4471e74f0114.png"></p><p><img src="https://temp-1gy46md6aa57683d-1303006761.tcloudbaseapp.com/448a015f52c65fd90de86c54c8cd1477.png"></p><p><img src="https://temp-1gy46md6aa57683d-1303006761.tcloudbaseapp.com/3d8fe250d0166343fb41715b3326afe4.png"></p><p><img src="https://temp-1gy46md6aa57683d-1303006761.tcloudbaseapp.com/2a022e382c248275ed7e848de5a4c7ee.png"></p><p>（六）启动Tomcat服务器（IDE方式）</p><p><img src="https://temp-1gy46md6aa57683d-1303006761.tcloudbaseapp.com/10eb21b70c21d22df5e4a0911dc48139.png"></p><p>（七）浏览JSP</p><p><img src="https://temp-1gy46md6aa57683d-1303006761.tcloudbaseapp.com/f804136a1b1b511ecf376c9694ad8b35.png"></p><p>（八）发布WAR包</p><p><img src="https://temp-1gy46md6aa57683d-1303006761.tcloudbaseapp.com/902076ec3de1fd330eacb5e31db1e9ab.png"></p><p><img src="https://temp-1gy46md6aa57683d-1303006761.tcloudbaseapp.com/41fa326c4d0b272dce723e68172f69bb.png"></p><p><img src="https://temp-1gy46md6aa57683d-1303006761.tcloudbaseapp.com/cd027d3c2ac62249d752cdcd3e109af9.png"></p><p><img src="https://temp-1gy46md6aa57683d-1303006761.tcloudbaseapp.com/f4e29149b67840f46951c8be81798891.png"></p><p>编译生成war包</p><p><img src="https://temp-1gy46md6aa57683d-1303006761.tcloudbaseapp.com/3e5ffcc15ddf64428de95102eb0692e1.png"></p><p><img src="https://temp-1gy46md6aa57683d-1303006761.tcloudbaseapp.com/4640cc49528c558819d2bffe3b5b4f82.png"></p><p>访问之前设定的文件目录路径，可看到生成的war包文件。</p><p>将项目生成war包，放置tomcat/webapps下，</p><p><img src="https://temp-1gy46md6aa57683d-1303006761.tcloudbaseapp.com/9737280c30a930550c51fc868aef329d.png"></p><p>通过命令或tomcat控制台启动tomcat，访问项目。</p><p><img src="https://temp-1gy46md6aa57683d-1303006761.tcloudbaseapp.com/cbc7fcf033be3d2c8e76fb19f3107100.png"></p><p>访问地址：<a href="http://localhost:8080/javaweb">http://localhost:8080/javaweb</a>（注意：先停止IDE的web服务）</p><p>（九）修改tomcat发布端口</p><p>将tomcat访问端口修改为8088，重新启动tomcat，访问<a href="http://localhost:8088/javaweb/first.jsp">http://localhost:8088/javaweb</a></p><p>修改文件为：tomcat/conf/server.xml</p><p><img src="https://temp-1gy46md6aa57683d-1303006761.tcloudbaseapp.com/c5dc9b7b21a421b4cc35b66bab38133e.png"></p><p>四、思考题</p><p>1、为什么访问项目时不需要输入全路径，如：<a href="http://localhost:8080/javaweb/index.jsp">http://localhost:8080/javaweb/index.jsp</a></p><p>因为在浏览器访问路径时，默认的访问页面文件是index.jsp。</p><p>2、如何将项目发布在其他目录下（非/tomcat/webapps目录）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;实验一-JSP开发环境的配置运行&quot;&gt;&lt;a href=&quot;#实验一-JSP开发环境的配置运行&quot; class=&quot;headerlink&quot; title=&quot;实验一 JSP开发环境的配置运行&quot;&gt;&lt;/a&gt;实验一 JSP开发环境的配置运行&lt;/h2&gt;&lt;p&gt;一、实验目的&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    <category term="javaWeb" scheme="https://blog.luoxiaohei.co/categories/javaWeb/"/>
    
    
    <category term="javaWeb" scheme="https://blog.luoxiaohei.co/tags/javaWeb/"/>
    
  </entry>
  
  <entry>
    <title>javaWeb—html5</title>
    <link href="https://blog.luoxiaohei.co/2020/10/14/JavaWeb-html5/"/>
    <id>https://blog.luoxiaohei.co/2020/10/14/JavaWeb-html5/</id>
    <published>2020-10-14T12:52:55.000Z</published>
    <updated>2021-05-28T01:59:54.409Z</updated>
    
    <content type="html"><![CDATA[<hr><div class="note info"><p>📖这是大三上学期学的javaweb知识记录总汇</p></div><div class="note success"><p>📚更新于9.24</p></div><h1 id="第二章-HTML5"><a href="#第二章-HTML5" class="headerlink" title="第二章 HTML5"></a>第二章 HTML5</h1><ul><li><p>静态网页制作</p></li><li><p>HTML中的常见标签</p></li><li><p>表格标签</p></li><li><p>链接和图片标签</p></li><li><p>表单标签</p></li><li><p>框架</p></li></ul><hr><h2 id="静态网页制作"><a href="#静态网页制作" class="headerlink" title="静态网页制作"></a>静态网页制作</h2><ul><li><p><input disabled="" type="checkbox">  HTML 有’两种’类型的标签，一类是单标签   &lt; br &gt;就是一种单标签，它只需要单独一组符号就可以表示完整的功能。另一种是双标签，形如&lt; B &gt;内容&lt; /B&gt;，表示将”内容”显示为粗体，这种标签所围绕的内容就是标签作用的作用域.</p></li><li><p><input disabled="" type="checkbox">  标签还有属性，如： &lt; a href=page.html/&gt;，其中的“href”就是一个属性名称，“page.html”是属性值。</p></li><li><p><input disabled="" type="checkbox">  HTML 语言对于大小写不敏感</p></li></ul><h2 id="文字标签"><a href="#文字标签" class="headerlink" title="文字标签"></a>文字标签</h2><p>标题标签：&lt; hn&gt;…&lt; /hn&gt;</p><p>换行标签：&lt; br&gt;</p><p>段落标签：&lt; p&gt;为段落标签，一个段落开始由&lt; p&gt;来标记，结束用&lt; /p&gt;表示。&lt; p&gt;有一个常用属性align，用来指明内容显示时的对齐方式，常用的有left、center和right，分别表示左对齐、居中对齐和右对齐。</p><p>&lt;  font&gt;&lt;/ font&gt;:用于标记字体。属性：size:设置字体大小。face：设置字体类型。color：设置字体颜色。</p><h2 id="HTML常见标签"><a href="#HTML常见标签" class="headerlink" title="HTML常见标签"></a>HTML常见标签</h2><p><strong>常见的设置文字风格的标签有：</strong> </p><ul><li><p>&lt; b&gt;内容&lt; /b&gt;：将内容设置为粗体。</p></li><li><p>&lt; u&gt;内容&lt; /u&gt;：将内容设置下划线。</p></li><li><p>&lt; i&gt;内容&lt; /i&gt;：将内容设置为斜体。</p></li><li><p>&lt; sup&gt;内容&lt; /sup&gt;：将内容设置为上标。</p></li><li><p>&lt; sub&gt;内容&lt; /sub&gt;：将内容设置为下标</p></li><li><p>&lt; blink&gt;内容&lt; /blink&gt;：将内容设置为闪烁（非标准元素）。</p></li></ul><h2 id="列表标签"><a href="#列表标签" class="headerlink" title="列表标签"></a>列表标签</h2><p>•&lt; ul&gt;内容&lt; /ul&gt;，表示它所包围的内容是无序列表标签，即列表 中每一项目前不会加上序号，而是会加上●、○、■等符号。其中列表的每一项用&lt; li&gt;列表项&lt; /li&gt;标示。</p><p>• &lt; ol&gt;内容&lt; /ol&gt;表示有序标签，意义与使用方法和无序列表标签大致相同，不同点为它会在每个列表项前加上数字</p><h2 id="表格标签"><a href="#表格标签" class="headerlink" title="表格标签"></a>表格标签</h2><ul><li>编写表格所用到的标签如下：</li></ul><p>&lt; table&gt; &lt; /table&gt;：定义表格，表格的所有内容都写在这个标签之内</p><p>&lt; caption&gt;&lt; /caption&gt;：定义标题，标题会自动出现在整张表格的上方</p><p>&lt; tr&gt;&lt; /tr&gt;：定义表行</p><p>&lt; th&gt;&lt; /th&gt;：定义表头，包含在&lt; tr&gt;&lt;/ tr&gt;之间，表头中的文字会自动变成粗体</p><p>&lt; td&gt;&lt;/ td&gt;：定义表元(表格的具体数据)，包含在&lt; tr&gt;&lt;/t r&gt;之间</p><ul><li>以下为制作表格的标签中大多拥有的公共属性： </li></ul><p><strong>align：水平布局方式，常用属性值有 left，right，center，表示左对齐，右对齐和居中对齐，&lt; table&gt;的该属性表示表格在页面的布局方式，&lt; tr&gt;、&lt; td&gt;的该属性表示该行和该表元内的内容的布局方式。默认布局方式为左对齐</strong></p><p>ü<strong>bgcolor：设置背景颜色</strong> </p><p>ü<strong>border：设置边框的宽度，属性值为整数，为 0 时表格没有边框，默认值为 0</strong> </p><p>ü<strong>width：宽度，默认单位为像素，也可以使用百分制单位</strong> </p><p>ü<strong>height：高度，默认单位为像素；也可以使用百分制单位</strong></p><ul><li>对于整张表格，<table>标签常用的属性有以下几个：</li></ul><p>ü<strong>bordercolor：表格边框的颜色，默认为黑色</strong> </p><p>ü<strong>cellpadding：表元边框的宽度</strong> </p><p>ü<strong>cellspacing：表元的边框与表格边框之间的宽度</strong></p><ul><li>合并单元格</li></ul><p>合并单元格必须对&lt; td&gt;标签中的 rowspan、colspan 进行设置，属性值都为整数，默认为 1，表示没有合并。这两个属性的意思分别为：从该表元起，该表元在行或者列上占有的单 元格数，比如设置某个&lt; td&gt;标签rowspan=2，表示该表元及其下面的表元合并成一个。</p><h2 id="链接和图片标签"><a href="#链接和图片标签" class="headerlink" title="链接和图片标签"></a>链接和图片标签</h2><p>&lt; a&gt;…&lt; /a&gt; 此标签的一个重要属性是：href，它的值表示链接所指向的资源地址.</p><p>图片标签比较重要和常用的标签有以下几个： </p><p><strong>src：表示图片储存的位置</strong> </p><p><strong>width，height，border，align：作用与前文所提到属性相同</strong> </p><p><strong>alt：当图片未载入或者载入失败时提供的替代性的文字说明</strong></p><h2 id="表单标签"><a href="#表单标签" class="headerlink" title="表单标签"></a>表单标签</h2><p>很多网页上，可以让用户在一些控件中输入一些内容，如文本框、密码框等，输入之后，提交，这些控件所在的区域叫做表单(form)。</p><p>一个表单是这样组成的：</p><p><strong>&lt; form action=”提交地址”&gt;</strong></p><p> <strong>表单内容（包括按钮、输入框、选择框等）</strong></p><p><strong>&lt; /form&gt;</strong></p><ul><li>表单最基本的标签是&lt; input&gt;标签，该标签可以用来显示输入框和按钮等表单元素。它的属性type决定了表单元素的类型，可以为以下的值：</li></ul><p><strong>text：文本框，text 也为 type 的默认属性</strong></p><p><strong>password：密码框</strong> </p><p><strong>radio：单选按钮，可以将多个单选按钮的 name 属性设置相同，使其成为一组。checked属性可设置默认被选</strong> </p><p><strong>checkbox：复选框，checked 属性可设置默认被选</strong></p><p><strong>reset：重置按钮，按下之后，所有的表单元素内容变为默认值</strong> </p><p><strong>button：普通按钮</strong> </p><p><strong>submit：提交按钮，按下之后，网页会将表单的内容提交给 action 设定的网页，action的值为空时提交给本页</strong> </p><p><strong>image：图片，但是点击它的效果与提交按钮一样，都会提交表单</strong></p><ul><li><p>表单中其他类型的表单元素还包括多行文本框和选择菜单等。</p><p><strong>&lt;**textarea&gt;&lt; /textarea&gt; 表示多行文本框，可用rows属性表示其行数，cols属性表示其列数</strong>。</p><p><strong>&lt; select&gt;&lt; /select&gt;</strong> <strong>表示下拉菜单，其中的选项使用</strong><option><strong>选项内容</strong>&lt; /option&gt;**表示，multiple属性可将其设置为可多选，size属性的值为下拉菜单的显示的项目数。</p></li></ul><h2 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h2><p>框架的写法如下： </p><p> &lt; frameset cols=”30%,70%”&gt; </p><p> &lt; frame src=”left.html” noresize scrolling=”no” name=”left”&gt;&lt; /frame&gt; </p><p> &lt; frame src=”right.html” noresize scrolling=”no” name=”right”&gt;&lt; /frame&gt; </p><p> &lt; /frameset&gt;</p><hr><p>&lt; frameset&gt;&lt; /frameset&gt;的属性有：</p><p><strong>rows</strong>：横向分割网页。属性值决定了分割页面之间的宽度的比值。</p><p><strong>cols</strong>：纵向分割网页。属性值决定了分割页面之间的长度的比值。</p><p><strong>border</strong>：框架边框的宽度。当值为<strong>0</strong>时，表示没有边框</p><p>**&lt; frameset&gt;&lt; /frameset&gt;**是可以嵌套使用的</p><p>&lt; frame&gt;&lt; /frame&gt;的属性有：</p><p><strong>src</strong>：表示框架内容的地址。</p><p><strong>noresize</strong>：表示该框架不可被用户改变大小。</p><p><strong>scrolling</strong>：表示是否有滚动条。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;div class=&quot;note info&quot;&gt;&lt;p&gt;📖这是大三上学期学的javaweb知识记录总汇&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;note success&quot;&gt;&lt;p&gt;📚更新于9.24&lt;/p&gt;
&lt;/div&gt;

&lt;h1 id=&quot;第二章-HTML5&quot;&gt;&lt;a</summary>
      
    
    
    
    <category term="javaWeb" scheme="https://blog.luoxiaohei.co/categories/javaWeb/"/>
    
    
    <category term="javaWeb" scheme="https://blog.luoxiaohei.co/tags/javaWeb/"/>
    
  </entry>
  
  <entry>
    <title>javaWeb概述</title>
    <link href="https://blog.luoxiaohei.co/2020/09/24/javaWeb/"/>
    <id>https://blog.luoxiaohei.co/2020/09/24/javaWeb/</id>
    <published>2020-09-24T12:52:55.000Z</published>
    <updated>2021-05-28T01:59:54.267Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>📖这是大三上学期学的javaweb知识记录总汇</p></div><div class="note success"><p>📚更新于9.24</p></div><hr><h1 id="第一章-web程序概述"><a href="#第一章-web程序概述" class="headerlink" title="第一章 web程序概述"></a>第一章 web程序概述</h1><h3 id="网页分类"><a href="#网页分类" class="headerlink" title="网页分类"></a>网页分类</h3><ul><li>静态页面：<code>纯HTML标记语言编写</code>的。只需要浏览器执行就好。</li><li>动态页面：与用户有交互的。需要web服务器对其做解析。</li></ul><h3 id="web消息生命周期"><a href="#web消息生命周期" class="headerlink" title="web消息生命周期"></a>web消息生命周期</h3><img src="http://lc-ySstfNx3.cn-n1.lcfile.com/f8202fe08baefcdbe44c.png/4WH%7D3WZB_%5BDHYZP%7EXB%40Q_EU.png" align = 'left' /><h3 id="web应用程序类型"><a href="#web应用程序类型" class="headerlink" title="web应用程序类型"></a>web应用程序类型</h3><ul><li>C/S(客户端/服务器)<ul><li>优点：基于浏览器访问，速度快，安全性高，客户端强</li><li>缺点：需要下载安装升级，部署维护困难</li></ul></li><li>B/S(浏览器/服务器)<ul><li>优点：维护容易，只需要维护服务器</li><li>缺点：速度慢，安全性低，客户端能力弱</li></ul></li></ul><h3 id="web程序工作原理"><a href="#web程序工作原理" class="headerlink" title="web程序工作原理"></a>web程序工作原理</h3><img src="http://lc-ySstfNx3.cn-n1.lcfile.com/e1cc4b15a80ca8fd8cfc.png/J9V%28AN%40%404BFY55VO%5B9KB8A6.png" align = 'left' />]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;note info&quot;&gt;&lt;p&gt;📖这是大三上学期学的javaweb知识记录总汇&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;note success&quot;&gt;&lt;p&gt;📚更新于9.24&lt;/p&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;h1 id=&quot;第一章-web程序概述&quot;&gt;</summary>
      
    
    
    
    <category term="javaWeb" scheme="https://blog.luoxiaohei.co/categories/javaWeb/"/>
    
    
    <category term="javaWeb" scheme="https://blog.luoxiaohei.co/tags/javaWeb/"/>
    
  </entry>
  
  <entry>
    <title>javaWebjavascript</title>
    <link href="https://blog.luoxiaohei.co/2020/09/24/javascript/"/>
    <id>https://blog.luoxiaohei.co/2020/09/24/javascript/</id>
    <published>2020-09-24T12:52:55.000Z</published>
    <updated>2021-05-28T01:59:54.383Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>📖这是大三上学期学的javaweb知识记录总汇</p></div><div class="note success"><p>📚更新于9.24</p></div><hr><ul><li><p>JavaScript简介</p></li><li><p>JavaScript内置对象</p></li></ul><hr><ul><li>JavaScript简介<ul><li>JavaScript 与 Java 一样，对大小写是敏感的 </li><li>在 JavaScript 中，注释有三种写法：一种是 HTML 注释的写法：&lt; !–注释内容– &gt;，还有两种和 Java 语言相同，分别为：”//单行注释”和”/ * 多行注释 * /“</li><li>除了可以将 JavaScript 代码嵌入 HTML 中之外，还可以专门将 JavaScript 代码写在单独 的文件中</li><li>弱类型变量</li><li>需要注意的是，JavaScript中变量未声明就使用是不会报错的。</li></ul></li></ul><p><strong>JavaScript 中定义一个函数的基本格式是：</strong>  </p><p><strong>function 函数名(参数列表){</strong> </p><p>   <strong>return 值;</strong> </p><p>   <strong>}</strong> </p><p>  <strong>也可以在使用中直接匿名定义：</strong> </p><p>   <strong>var arg1 = function(参数列表){</strong> </p><p>   <strong>return 值;</strong> </p><p>   <strong>}</strong> </p><p>使用最多的内置对象（内置对象由浏览器提供）有四个，并且之后的学习也将主要围绕着四个对象展开：</p><p><strong>window：负责操作浏览器窗口，负责窗口状态，开闭等</strong> </p><p><strong>document：负责操作浏览器载入的文档(HTML 文件)。它从属于 window</strong></p><p><strong>history：可以代替后退(前进)按钮访问历史记录，从属于 window</strong>  <strong>location：访问地址栏，也是从属于 window</strong></p><ul><li><p>window 对象可以跳出提示框。主要有如下功能： </p><p>window.alert(“内容”)：出现消息框</p><p>window.confirm(“内容”)：出现确认框</p><p>window.prompt(“内容”)：出现输入框</p></li></ul><p><strong>打开、关闭窗口</strong> </p><p> window.open()在网页制作中使用非常广泛，参数有 3 个，第 1 个是新窗口的地址，第 2 个是新窗口名称，第 3 个是新窗口状态，其中新窗口状态的属性可设置的有： </p><p> toolbar：是否有工具栏，可选 1 和 0 </p><p> location：是否有地址栏，可选 1 和 0 </p><p> status：是否有状态栏，可选 1 和 0 </p><p>menubar：是否有菜单条，可选 1 和 0 </p><p> scrollbars:：是否有滚动条，可选 1 和 0 </p><p> resizable:：是否有可改变大小，可选 1 和 0 </p><p> width,height：窗口的宽度和高度，用像素表示 </p><p> left，top：窗口左上角相对于桌面左上角的 x 和 y 坐标。 </p><p> 各属性值用逗号隔开。如： </p><p> newWindow = window.open(“window1.html”,”new1”, </p><p> “toolbar=0,width=300,height=300,top=500,left=500”); </p><p><strong>定时器</strong> </p><p>window 对象负责管理和控制页面的定时器，定时器的作用是让某个函数隔一段时间之后运行一次，格式为： </p><p> timer = window.setTimeout(“需要运行的函数”,”时间(用毫秒计)”); </p><p>如果要清除定时器，则可以：</p><p>​      clearTimeout(timer);</p><ul><li>history 对象</li></ul><p>history 对象包含用户的浏览历史等信息，用到这个对象的原因，是因为它可以代替后退 (前进)按钮访问历史记录，该对象从属于 window。</p><p>whistory 最常用的函数为： </p><p><strong>history.back()：返回上一页，相当于点了浏览器上的后退按钮</strong> </p><p><strong>history.forward()：返回下一页，相当于点了浏览器上的前进按钮</strong> </p><p><strong>window.history.go(n)：n 为整数，正数表示向前进 n 格页面，负数表示向后退 n 格页面</strong></p><ul><li>document 对象</li></ul><p>wdocument 对象从属于 window，其功能如下：</p><p><strong>在网页上输出</strong></p><p> writeln()函数为输出一些简单却重复的代码提供很大的便利</p><p><strong>设置网页的属性</strong></p><p>document 可以进行一些简单网页属性的设置，如网页标题、颜色等，并且可以得到网页的某些属性，如当前地址。比较常用的有：通过 document.title 来访问标题，通过document.location 来获取网页当前的地址</p><p><strong>访问文档元素，特别是表单元素</strong></p><p>document 可以访问文档中的元素(如图片、表单、表单中的控件等)，前提是元素的 name属性是确定的。访问方法为：document.元素名.子元素名….。比如，名为 form1 的表单中有一个文本框 account，其中的内容可以用如下代码获得： </p><p> var account = document.form1.account.value;</p><ul><li>location 对象</li></ul><p>location 对象可以访问浏览器地址栏，也是从属于 window，最常见功能就是跳转到另一个网页。跳转的方法就是修改location的href属性。</p><p>location 对象另一个比较常见的应用是定时跳转。需要结合window的定时器使用。</p><p>eg:</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line"><span class="built_in">window</span>.setTimeout(<span class="string">&quot;toIndex()&quot;</span>,<span class="string">&quot;3000&quot;</span>); <span class="comment">/*3秒后运行toindex*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">toIndex</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">window</span>.location.href = <span class="string">&quot;image.jpg&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;note info&quot;&gt;&lt;p&gt;📖这是大三上学期学的javaweb知识记录总汇&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;note success&quot;&gt;&lt;p&gt;📚更新于9.24&lt;/p&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;JavaScrip</summary>
      
    
    
    
    <category term="javaWeb" scheme="https://blog.luoxiaohei.co/categories/javaWeb/"/>
    
    
    <category term="javaWeb" scheme="https://blog.luoxiaohei.co/tags/javaWeb/"/>
    
  </entry>
  
  <entry>
    <title>编译原理</title>
    <link href="https://blog.luoxiaohei.co/2020/09/24/%E6%B1%87%E7%BC%96%E5%8E%9F%E7%90%86/"/>
    <id>https://blog.luoxiaohei.co/2020/09/24/%E6%B1%87%E7%BC%96%E5%8E%9F%E7%90%86/</id>
    <published>2020-09-24T08:56:14.000Z</published>
    <updated>2021-05-28T02:01:12.291Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>📖这是大三上学期学的编译知识记录总汇</p></div><div class="note success"><p>📚更新于9.24</p></div><hr><h3 id="教材"><a href="#教材" class="headerlink" title="教材"></a>教材</h3><hr><h5 id="第一章-引论"><a href="#第一章-引论" class="headerlink" title="第一章 引论"></a>第一章 引论</h5><h6 id="1-1什么叫编译程序"><a href="#1-1什么叫编译程序" class="headerlink" title="1.1什么叫编译程序"></a>1.1什么叫编译程序</h6><ul><li>编译器和解释器<ul><li>编译器：工作效率高，时间快，空间省，交互能力低，可移植能力差，大多数高级程序设计语言采用</li><li>解释器：工作效率低，时间慢，空间费，交互能力强，可移植能力强，用于[perl][<a href="https://baike.baidu.com/item/Perl/851577]">https://baike.baidu.com/item/Perl/851577]</a> :cat:</li></ul></li></ul><ul><li>1.2 编译过程概述</li><li>1.3 编译程序结构</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;note info&quot;&gt;&lt;p&gt;📖这是大三上学期学的编译知识记录总汇&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;note success&quot;&gt;&lt;p&gt;📚更新于9.24&lt;/p&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;h3 id=&quot;教材&quot;&gt;&lt;a href=&quot;#教材&quot; </summary>
      
    
    
    
    <category term="编译原理" scheme="https://blog.luoxiaohei.co/categories/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/"/>
    
    
    <category term="编译原理" scheme="https://blog.luoxiaohei.co/tags/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>OS</title>
    <link href="https://blog.luoxiaohei.co/2020/09/22/OS/"/>
    <id>https://blog.luoxiaohei.co/2020/09/22/OS/</id>
    <published>2020-09-22T12:49:31.000Z</published>
    <updated>2021-05-28T01:59:54.449Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>📖操作系统第一章</p><p>📚操作系统引论</p></div><hr><h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><ul><li>目标和作用：</li><li>发展过程：</li><li>基本特征</li><li>主要功能</li><li>OS结构设计</li></ul><hr><p>:star: <strong>操作系统的目标</strong></p><img src="http://lc-ySstfNx3.cn-n1.lcfile.com/cbe113ff91326d85a0b6.png/W6WQ%40%60II%7E9KU1%5BE%5D5%5D%60%7EJ%24U.png" align = 'left' /><h5 id="star-操作系统的发展过程"><a href="#star-操作系统的发展过程" class="headerlink" title=":star: 操作系统的发展过程"></a>:star: 操作系统的发展过程</h5><ul><li><p>单道批处理系统</p><ul><li>纸片机</li></ul></li><li><p>多道批处理系统</p><ul><li>优缺点<ul><li>资源利用率高</li><li>系统吞吐量大</li><li>平均周期长</li><li>无交互能力</li></ul></li></ul></li><li><p>分时系统</p><ul><li>人机交互： 不停调试和修改</li><li>共享主机： 共享一台主机</li><li>关键问题： 及时接收 及时处理</li><li>特征：多路性，独立性，交互性，及时性</li></ul></li><li><p>实时系统</p><ul><li>周期性实时任务和非周期性实时任务</li><li>硬实时任务和软实时任务</li></ul></li><li><p>实时和分时系统特征的比较</p><ul><li>多路性</li><li>独立性</li><li>及时性</li><li>交互性</li><li>可靠性</li></ul></li></ul><h5 id="star-操作系统的基本特征"><a href="#star-操作系统的基本特征" class="headerlink" title=":star:操作系统的基本特征"></a>:star:操作系统的基本特征</h5><p><code>并发</code>，<code>共享</code>，<code>虚拟</code>，<code>异步</code> </p><p>:star: 并行和并发：</p><ul><li>并行是同时刻</li><li>并发是时间段</li></ul><p>:star: 共享：</p><ul><li>互斥共享：轮流使用</li><li>同时访问：宏观上同时使用，微观轮流使用</li></ul><p>:star:虚拟：</p><ul><li><p>时分复用技术</p><ul><li>虚拟处理机</li><li>虚拟设备</li></ul></li><li><p>空分复用技术</p></li></ul><p>:star:异步：</p><ul><li>并发时，进程不按照顺序进行</li></ul><h5 id="star-操作系统的主要功能"><a href="#star-操作系统的主要功能" class="headerlink" title=":star:操作系统的主要功能"></a>:star:操作系统的主要功能</h5><ul><li><p>处理机管理功能（2，3章节）：进程控制，进程同步，进程通信，调度（作业调度和进程调度）</p></li><li><p>存储器管理功能：内存分配；内存保护；地址映射；内存扩充</p></li><li><p>作用：</p><ul><li>为每道程序分配内存空间</li><li>提高存储器的利用率</li><li>允许正在运行的程序申请内存空间</li></ul></li><li><p>方式</p><ul><li>静态分配</li><li>动态分配</li></ul></li><li><p>设备管理功能</p><ul><li>完成用户进程提出的I/O请求</li><li>提高CPU和I/O设备的利用率</li></ul></li></ul><h5 id="star-文件管理功能"><a href="#star-文件管理功能" class="headerlink" title=":star:文件管理功能"></a>:star:文件管理功能</h5><ul><li>文件存储空间的管理</li><li>目录管理</li><li>文件的读/写管理和保护</li></ul><h5 id="star-操作系统与用户之间的接口"><a href="#star-操作系统与用户之间的接口" class="headerlink" title=":star:操作系统与用户之间的接口"></a>:star:操作系统与用户之间的接口</h5><ul><li>用户接口<ul><li>联机用户接口</li><li>脱机用户接口</li><li>图形用户接口</li></ul></li><li>程序接口</li></ul><h5 id="star-OS结构设计"><a href="#star-OS结构设计" class="headerlink" title=":star:OS结构设计"></a>:star:OS结构设计</h5><ul><li>传统操作系统结构</li><li>客户/服务器模式</li><li>面向对象的程序设计</li><li>微内核OS结构</li></ul><p>都存在优缺点，但是这小节不是重点，是软工学习的方向，如何设计一个操作系统。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;note info&quot;&gt;&lt;p&gt;📖操作系统第一章&lt;/p&gt;
&lt;p&gt;📚操作系统引论&lt;/p&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;ul&gt;</summary>
      
    
    
    
    <category term="OS" scheme="https://blog.luoxiaohei.co/categories/OS/"/>
    
    
    <category term="OS" scheme="https://blog.luoxiaohei.co/tags/OS/"/>
    
  </entry>
  
  <entry>
    <title>HTML5</title>
    <link href="https://blog.luoxiaohei.co/2020/09/22/HTML5/"/>
    <id>https://blog.luoxiaohei.co/2020/09/22/HTML5/</id>
    <published>2020-09-22T06:13:27.000Z</published>
    <updated>2021-05-28T01:51:38.251Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>📖这是大三上学期学的前端知识记录总汇</p></div><div class="note success"><p>📚更新于9.22</p></div><h1 id="HTML5及CSS学习"><a href="#HTML5及CSS学习" class="headerlink" title="HTML5及CSS学习"></a>HTML5及CSS学习</h1><hr><blockquote><p>学习路径：</p><ul><li>HTML 20%</li><li>CSS3 50%</li><li>H5C3 10%包括新增的标签</li></ul></blockquote><ul>    <li><a href="https://www.bilibili.com/video/av80149248">去学习</a></li></ul><h3 id="网页是由三大要素组成的"><a href="#网页是由三大要素组成的" class="headerlink" title="网页是由三大要素组成的"></a>网页是由三大要素组成的</h3><ul><li><p>HTML ：用于标记，整理分类</p></li><li><p>CSS ：样式，颜色</p></li><li><p>Javascript ：方法，逻辑</p></li></ul><h3 id="HTML基本结构"><a href="#HTML基本结构" class="headerlink" title="HTML基本结构"></a>HTML基本结构</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>网页的标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        网页的内容部分</span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="HTML常用的标签"><a href="#HTML常用的标签" class="headerlink" title="HTML常用的标签"></a>HTML常用的标签</h3><ul><li>标题标签<code>&lt;h1&gt;-&lt;h6&gt;</code>一级标题到6级标题 =markdown中的#</li><li>段落标签和换行标签<code>&lt;p&gt;&lt;/p&gt;</code>段落标签</li><li>换行标签 单标签 <code>&lt;br /&gt;</code>强制换行(也可以这么写<code>&lt;br&gt;</code>)</li></ul><h3 id="文本格式化标签"><a href="#文本格式化标签" class="headerlink" title="文本格式化标签"></a>文本格式化标签</h3><ul><li><strong>加粗</strong> <code>&lt;strong&gt;加粗标签&lt;/strong&gt;</code> <code>&lt;b&gt;加粗标签*2&lt;/b&gt;</code><br>优先考虑strong</li><li><em>斜体</em> <code>&lt;em&gt;倾斜标签&lt;/em&gt;</code> <code>&lt;i&gt;倾斜标签*2&lt;/i&gt;</code><br>优先考虑em</li><li>删除线 <code>&lt;del&gt;删除标签&lt;/del&gt;</code> <code>&lt;s&gt;删除标签*2&lt;/s&gt;</code><br>优先del标签</li><li>下划线 <code>&lt;ins&gt;下划线标签&lt;/ins&gt;</code> <code>&lt;u&gt;下划线标签*2&lt;/u&gt;</code><br>优先使用ins</li></ul><h3 id="图像标签和路径"><a href="#图像标签和路径" class="headerlink" title="图像标签和路径"></a>图像标签和路径</h3><h4 id="图片标签"><a href="#图片标签" class="headerlink" title="图片标签"></a>图片标签</h4><ul><li>图像标签<code>&lt;img src=&quot;图像URL&quot; /&gt;</code>　单标签　同一目录下可以直接用图片名做url</li><li>图像标签的参数 (参数之间用空格分开)<ul><li>alt 如果图片不能显示用来替换的文字</li><li>height 图片高度</li><li>width 图片宽度</li><li>title 鼠标放到图片上显示的文字</li><li>border 边框宽度 css设定的情况比较多</li></ul></li></ul><h3 id="超链接标签-a"><a href="#超链接标签-a" class="headerlink" title="超链接标签 a"></a>超链接标签 a</h3><ul><li>超链接语法格式</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">herf</span>=<span class="string">&quot;&quot;</span> <span class="attr">target</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>herf 用于链接目标的地址(必须)<ul><li>外部链接 两个标签中间作为超链接开关</li><li>内部链接 herf直接写文件名称就可以(盲猜也是使用相对路径)</li><li>空链接 herf可以用空链接 用#代替</li><li>下载链接 如果herf里是一个zip或文件则默认下载</li><li>各种元素都可以做为超链接</li><li>锚点链接 跳到本页中的某处的链接<ul><li>herf属性里为’#名字’的形式<code>&lt;a herf=&quot;#two&quot;&gt;</code></li><li>然后在目标标签里<code>&lt;h3 id=&quot;two&quot;&gt;</code></li></ul></li></ul></li><li>targrt 链接页面的打开方式 _self为默认值在当前页打开 _blank为在新窗口打开</li></ul><h3 id="注释标签和特殊字符"><a href="#注释标签和特殊字符" class="headerlink" title="注释标签和特殊字符"></a>注释标签和特殊字符</h3><ul><li>注释标签 <!--这就是注释--></li><li>特殊符号</li></ul><table><thead><tr><th>效果</th><th>字符实体</th><th>实体名称</th><th>实体数值</th></tr></thead><tbody><tr><td>&gt;</td><td>大于</td><td>&amp;gt ;</td><td>&amp;#62 ;</td></tr><tr><td>&lt;</td><td>小于</td><td>&amp;lt ;</td><td>&amp;#60 ;</td></tr><tr><td>空格</td><td></td><td>&amp;nbsp ;</td><td>&amp;#160 ;</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;note info&quot;&gt;&lt;p&gt;📖这是大三上学期学的前端知识记录总汇&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;note success&quot;&gt;&lt;p&gt;📚更新于9.22&lt;/p&gt;
&lt;/div&gt;

&lt;h1 id=&quot;HTML5及CSS学习&quot;&gt;&lt;a href=&quot;#</summary>
      
    
    
    
    <category term="HTML5" scheme="https://blog.luoxiaohei.co/categories/HTML5/"/>
    
    
    <category term="HTML5" scheme="https://blog.luoxiaohei.co/tags/HTML5/"/>
    
  </entry>
  
</feed>
